// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String         @unique
  password        String
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt
  purchaseListIds String[]       @db.ObjectId
  purchaseList    PurchaseList[] @relation(fields: [purchaseListIds], references: [id])
  Groups          Groups[]       @relation(fields: [groupsId], references: [id])
  groupsId        String[]       @db.ObjectId
}

model Groups {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  color          String
  icon           String
  usersIDs       String[]       @db.ObjectId
  users          User[]         @relation(fields: [usersIDs], references: [id])
  purchaseListId String[]       @db.ObjectId
  PurchaseList   PurchaseList[] @relation(fields: [purchaseListId], references: [id])
  updated_at     DateTime       @updatedAt
  createdAt      DateTime       @default(now())
}

model PurchaseList {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  color       String
  icon        String
  concluded   Boolean    @default(false)
  delete      Boolean    @default(false)
  total       Float      @default(0.0)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  productsIDs String[]   @db.ObjectId
  products    Products[] @relation(fields: [productsIDs], references: [id])
  usersIDs    String[]   @db.ObjectId
  users       User[]     @relation(fields: [usersIDs], references: [id])
  groupsId    String[]   @db.ObjectId
  Groups      Groups[]   @relation(fields: [groupsId], references: [id])
}

model Products {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  quantity       Int            @default(1)
  category       String
  price          Float          @default(0.0)
  place          String
  checked        Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  PurchaseList   PurchaseList[] @relation(fields: [purchaseListId], references: [id])
  purchaseListId String[]       @db.ObjectId
}
